{"version":3,"file":"component---src-templates-categories-archive-jsx-cb63662ce348c276170e.js","mappings":"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","sources":["webpack://headless-gatsby-multilang/./src/functions/formatDateTime.js","webpack://headless-gatsby-multilang/./src/components/Layout/Blog/Cards.jsx","webpack://headless-gatsby-multilang/./src/components/Layout/Hero/index.jsx","webpack://headless-gatsby-multilang/./src/templates/CategoriesArchive.jsx"],"sourcesContent":["const timeOptions = {\r\n  hour: '2-digit',\r\n  minute: '2-digit',\r\n};\r\n\r\nconst dateOptions = {\r\n  year: 'numeric',\r\n  month: 'short',\r\n  day: 'numeric',\r\n};\r\n\r\nexport const formatDateTime = (dateString, contextLocale) =>\r\n  new Date(dateString).toLocaleString(contextLocale, {\r\n    ...dateOptions,\r\n    ...timeOptions,\r\n  });\r\n\r\nexport const formatDate = (dateString, contextLocale) =>\r\n  new Date(dateString).toLocaleString(contextLocale, {\r\n    ...dateOptions,\r\n  });\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { GatsbyImage, getImage, withArtDirection } from 'gatsby-plugin-image';\r\nimport { Navigator } from '../../LanguageHelpers/Navigator';\r\nimport { HeadingSmall } from '../SharedStyles/Headings';\r\nimport { usePageLanguage } from '../../../hooks/usePageLanguage';\r\nimport { formatDate } from '../../../functions/formatDateTime';\r\nimport { easeOutTiming } from '../SharedStyles/animations';\r\n\r\n// Scoped styles\r\n\r\nconst CardLink = styled(Navigator)`\r\n  width: 100%;\r\n  row-gap: var(--gapSmall);\r\n  display: grid;\r\n  height: min-content;\r\n  justify-content: start;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    column-gap: var(--gapRegular);\r\n    align-items: initial;\r\n    min-height: 120px;\r\n  }\r\n\r\n  @media (hover: hover) {\r\n    &:hover {\r\n      & h1 {\r\n        color: var(--primaryColor);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardImgContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst CardImg = styled(GatsbyImage)`\r\n  border-radius: var(--defaultRadius);\r\n  z-index: 2;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    --widthMobile: 50px;\r\n    min-width: var(--widthMobile);\r\n    min-height: var(--widthMobile);\r\n  }\r\n\r\n  & picture {\r\n    & img {\r\n      border-radius: var(--defaultRadius);\r\n      @media screen and (max-width: 950px) {\r\n        height: unset !important;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CategoryBox = styled.span`\r\n  width: max-content;\r\n  white-space: nowrap;\r\n  line-height: 0.8;\r\n  position: relative;\r\n  padding: 0.3em 0.5em 0.4em 0.5em;\r\n  margin-bottom: -5px;\r\n  border: var(--borderSmall) solid var(--primaryColor);\r\n  color: var(--primaryColor);\r\n  border-radius: 5px;\r\n  font-size: var(--baseS);\r\n  font-weight: 600;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const CardImgArtDir = (cardImg, cardImgMobile, altImg) => {\r\n  const cardImgs = withArtDirection(getImage(cardImg), [\r\n    {\r\n      media: '(max-width: 950px)',\r\n      image: getImage(cardImgMobile),\r\n    },\r\n  ]);\r\n  return (\r\n    <CardImgContainer>\r\n      <CardImg objectFit=\"cover\" image={cardImgs} alt={altImg || ''} />\r\n    </CardImgContainer>\r\n  );\r\n};\r\n\r\nconst ContentWrapper = styled.div`\r\n  row-gap: var(--gapSmall);\r\n  display: grid;\r\n  height: max-content;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    row-gap: calc(var(--gapSmall) / 1.5);\r\n    grid-column: 2 / span 2;\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled(HeadingSmall)`\r\n  &&& {\r\n    margin-top: ${({ isCategoryTitle }) =>\r\n      isCategoryTitle ? '0.25em' : '-0.25em'};\r\n    line-height: 1.1;\r\n  }\r\n  transition: color ${easeOutTiming};\r\n  margin: calc(var(--gapSmall) - 0.66em) 0;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    margin: unset;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: var(--baseMMobile);\r\n  }\r\n`;\r\n\r\nconst Date = styled.time`\r\n  color: var(--baseTextColor);\r\n  font-size: var(--baseS);\r\n  text-transform: capitalize;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: var(--baseSMobile);\r\n  }\r\n`;\r\n\r\nconst Excerpt = styled.p`\r\n  color: var(--baseTextColor);\r\n  font-size: var(--baseM);\r\n  line-height: 1.3;\r\n`;\r\n\r\nconst AuthorCtaContainer = styled.footer`\r\n  display: flex;\r\n  grid-template-columns: auto auto;\r\n  column-gap: var(--gapRegular);\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst AuthorContainer = styled.div`\r\n  --imgWidthHeight: 25px;\r\n  display: grid;\r\n  grid-template-columns: var(--imgWidthHeight) auto;\r\n  column-gap: var(--gapSmall);\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    --imgWidthHeight: 20px;\r\n    column-gap: calc(var(--gapSmall) - 0.33em);\r\n    grid-template-columns: var(--imgWidthHeight) auto;\r\n  }\r\n`;\r\n\r\nconst AuthorImg = styled(GatsbyImage)`\r\n  width: var(--imgWidthHeight);\r\n  height: var(--imgWidthHeight);\r\n\r\n  & img {\r\n    border-radius: var(--imgWidthHeight);\r\n  }\r\n`;\r\n\r\n// Main components\r\n\r\nexport const ArticleCard = ({\r\n  recordId,\r\n  cardImg,\r\n  date,\r\n  title,\r\n  excerpt,\r\n  authorImg,\r\n  authorName,\r\n  category,\r\n}) => {\r\n  const { pageLanguage } = usePageLanguage();\r\n  return (\r\n    <article>\r\n      <CardLink recordId={recordId}>\r\n        {cardImg}\r\n        <ContentWrapper>\r\n          {category && <CategoryBox>{category.title}</CategoryBox>}\r\n          <Date>{formatDate(date, pageLanguage)}</Date>\r\n          <PostTitle>{title}</PostTitle>\r\n          <Excerpt>{excerpt}</Excerpt>\r\n          <AuthorCtaContainer>\r\n            <AuthorContainer>\r\n              <AuthorImg\r\n                objectFit=\"cover\"\r\n                image={authorImg || ''}\r\n                alt={authorName || ''}\r\n              />\r\n              <Date as=\"address\">{authorName}</Date>\r\n            </AuthorContainer>\r\n          </AuthorCtaContainer>\r\n        </ContentWrapper>\r\n      </CardLink>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport const CategoryCard = ({ recordId, cardImg, title, description }) => (\r\n  <article>\r\n    <CardLink recordId={recordId}>\r\n      {cardImg}\r\n      <ContentWrapper>\r\n        <PostTitle isCategoryTitle>{title}</PostTitle>\r\n        <Excerpt>{description}</Excerpt>\r\n      </ContentWrapper>\r\n    </CardLink>\r\n  </article>\r\n);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { HeroSubtitle, HeroTitle, HeroAlt } from '../SharedStyles/Headings';\r\nimport { Divider } from '../SharedStyles/Sections';\r\n\r\nconst HeroWrapper = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: ${({ fullView }) => fullView && '100vh'};\r\n  padding: var(--globalPaddingTb) var(--globalPaddingLr);\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nconst HeroContainer = styled.div`\r\n  width: var(--globalContainer);\r\n  display: grid;\r\n  row-gap: var(--gapXL);\r\n  justify-content: ${({ centered }) => centered && 'center'};\r\n  width: 100%;\r\n  max-width: var(--globalContainer);\r\n`;\r\n\r\nconst HeroTextBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  row-gap: var(--gapRegular);\r\n  width: 600px;\r\n  justify-items: ${({ centered }) => centered && 'center'};\r\n  @media screen and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Hero = ({\r\n  fullView,\r\n  centered,\r\n  alt,\r\n  title,\r\n  subtitle,\r\n  button,\r\n  sectionChildren,\r\n  hasDivider,\r\n}) => (\r\n  <HeroWrapper fullView={fullView}>\r\n    <HeroContainer centered={centered}>\r\n      <HeroTextBox centered={centered}>\r\n        {alt && <HeroAlt>{alt}</HeroAlt>}\r\n        <HeroTitle centered={centered}>{title}</HeroTitle>\r\n        <HeroSubtitle centered={centered}>{subtitle}</HeroSubtitle>\r\n        {button}\r\n      </HeroTextBox>\r\n      {sectionChildren}\r\n    </HeroContainer>\r\n    {hasDivider && <Divider bottom />}\r\n  </HeroWrapper>\r\n);\r\n","import { graphql } from 'gatsby';\r\nimport React from 'react';\r\nimport { Hero } from '../components/Layout/Hero';\r\nimport { PageWrapper } from '../components/Layout/PageWrapper';\r\nimport {\r\n  SectionContainerGridThreeCols,\r\n  SectionWrapper,\r\n} from '../components/Layout/SharedStyles/Sections';\r\nimport { CardImgArtDir, CategoryCard } from '../components/Layout/Blog/Cards';\r\n\r\nconst CategoriesArchiveTemplate = ({\r\n  data: {\r\n    datoCmsCategoriesArchive: {\r\n      hero: [{ heroTitle, heroSubtitle, heroAlt }],\r\n      seo,\r\n    },\r\n    allDatoCmsCategory: { categoryNodes },\r\n  },\r\n  pageContext,\r\n}) => (\r\n  <PageWrapper\r\n    pageData={pageContext}\r\n    seoTitle={seo?.seoTitle}\r\n    seoDescription={seo?.seoDescription}\r\n    seoImage={seo?.seoImage?.seoImageUrl}\r\n  >\r\n    <Hero alt={heroAlt} title={heroTitle} subtitle={heroSubtitle} />\r\n    <SectionWrapper backgroundColor=\"var(--backgroundColorAlt)\">\r\n      <SectionContainerGridThreeCols>\r\n        {categoryNodes.map(({ id, title, shortDescription, coverImage }) => (\r\n          <CategoryCard\r\n            key={id}\r\n            recordId={id}\r\n            title={title}\r\n            description={shortDescription}\r\n            cardImg={\r\n              coverImage &&\r\n              CardImgArtDir(\r\n                coverImage.gatsbyImageData,\r\n                coverImage.squaredImage,\r\n                title\r\n              )\r\n            }\r\n          />\r\n        ))}\r\n      </SectionContainerGridThreeCols>\r\n    </SectionWrapper>\r\n  </PageWrapper>\r\n);\r\n\r\nexport default CategoriesArchiveTemplate;\r\n\r\nexport const query = graphql`\r\n  query CategoriesArchiveQuery($locale: String!) {\r\n    datoCmsCategoriesArchive(locale: { eq: $locale }) {\r\n      locale\r\n      seo {\r\n        seoTitle: title\r\n        seoDescription: description\r\n        seoImage: image {\r\n          seoImageUrl: url\r\n        }\r\n      }\r\n      hero {\r\n        heroTitle\r\n        heroSubtitle\r\n        heroAlt\r\n      }\r\n    }\r\n    allDatoCmsCategory(\r\n      filter: { locale: { eq: $locale }, noTranslate: { ne: true } }\r\n    ) {\r\n      categoryNodes: nodes {\r\n        locale\r\n        id: originalId\r\n        title\r\n        shortDescription\r\n        coverImage {\r\n          gatsbyImageData(\r\n            width: 300\r\n            height: 120\r\n            placeholder: NONE\r\n            forceBlurhash: false\r\n          )\r\n          squaredImage: gatsbyImageData(\r\n            width: 100\r\n            height: 100\r\n            imgixParams: { ar: \"1\", fit: \"crop\" }\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["dateOptions","year","month","day","CardLink","styled","Navigator","CardImgContainer","CardImg","GatsbyImage","CategoryBox","CardImgArtDir","cardImg","cardImgMobile","altImg","cardImgs","withArtDirection","getImage","media","image","objectFit","alt","ContentWrapper","PostTitle","HeadingSmall","isCategoryTitle","easeOutTiming","Date","Excerpt","AuthorCtaContainer","AuthorContainer","AuthorImg","ArticleCard","contextLocale","recordId","date","title","excerpt","authorImg","authorName","category","pageLanguage","usePageLanguage","toLocaleString","as","CategoryCard","description","HeroWrapper","fullView","HeroContainer","centered","HeroTextBox","Hero","subtitle","button","sectionChildren","hasDivider","bottom","data","datoCmsCategoriesArchive","hero","heroTitle","heroSubtitle","heroAlt","seo","categoryNodes","allDatoCmsCategory","pageContext","pageData","seoTitle","seoDescription","seoImage","seoImageUrl","backgroundColor","map","id","shortDescription","coverImage","key","gatsbyImageData","squaredImage"],"sourceRoot":""}