{"version":3,"file":"component---src-pages-404-jsx-6fbf7fb4a5c27452ac29.js","mappings":"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","sources":["webpack://headless-gatsby-multilang/./src/components/Layout/Hero/index.jsx","webpack://headless-gatsby-multilang/./src/components/Head/NotFoundPageHead.jsx","webpack://headless-gatsby-multilang/./src/pages/404.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { HeroSubtitle, HeroTitle, HeroAlt } from '../SharedStyles/Headings';\nimport { Divider } from '../SharedStyles/Sections';\n\nconst HeroWrapper = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: ${({ fullView }) => fullView && '100vh'};\n  padding: var(--globalPaddingTb) var(--globalPaddingLr);\n  flex-direction: column;\n  position: relative;\n`;\n\nconst HeroContainer = styled.div`\n  width: var(--globalContainer);\n  display: grid;\n  row-gap: var(--gapXL);\n  justify-content: ${({ centered }) => centered && 'center'};\n  width: 100%;\n  max-width: var(--globalContainer);\n`;\n\nconst HeroTextBox = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  row-gap: var(--gapRegular);\n  width: 600px;\n  justify-items: ${({ centered }) => centered && 'center'};\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nexport const Hero = ({\n  fullView,\n  centered,\n  alt,\n  title,\n  subtitle,\n  button,\n  sectionChildren,\n  hasDivider,\n}) => (\n  <HeroWrapper fullView={fullView}>\n    <HeroContainer centered={centered}>\n      <HeroTextBox centered={centered}>\n        {alt && <HeroAlt>{alt}</HeroAlt>}\n        <HeroTitle centered={centered}>{title}</HeroTitle>\n        <HeroSubtitle centered={centered}>{subtitle}</HeroSubtitle>\n        {button}\n      </HeroTextBox>\n      {sectionChildren}\n    </HeroContainer>\n    {hasDivider && <Divider bottom />}\n  </HeroWrapper>\n);\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { isRtlLang } from '../../functions/langUtils';\n\nexport const NotFoundPageHead = ({ locale, title }) => {\n  const isRtl = isRtlLang(locale);\n\n  return (\n    <Helmet>\n      <html lang={locale} dir={isRtl ? 'rtl' : 'ltr'} />\n      <link rel=\"icon\" href=\"/favicon-32.png\" type=\"image/png\" />\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n","import React from 'react';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport { useDefaultLanguage } from '../hooks/useDefaultLanguage';\nimport { Hero } from '../components/Layout/Hero';\nimport {\n  storeLocale,\n  getStoredLocale,\n  getSecondaryLangs,\n  findSecondaryLang,\n  isDefaultStored,\n  isSecondaryStored,\n} from '../functions/langUtils';\nimport { getPreferredLang } from '../functions/getPreferredLang';\nimport { isSSR } from '../functions/isSSR';\nimport { NotFoundPageHead } from '../components/Head/NotFoundPageHead';\n\nconst NotFoundPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      datoCmsSite {\n        locales\n      }\n      allDatoCmsNotFoundPage {\n        nodes {\n          seo {\n            seoTitle: title\n          }\n          title\n          subtitle\n          backToHomeText\n          locale\n        }\n      }\n    }\n  `);\n\n  const { defaultLanguage } = useDefaultLanguage();\n\n  const {\n    datoCmsSite: { locales },\n  } = data;\n  const appLangCodes = [...locales];\n  const storedLocale = getStoredLocale();\n\n  if (!isSSR) {\n    const browserLangCodes = navigator.languages;\n    const {\n      allDatoCmsNotFoundPage: { nodes: propNodes },\n    } = data;\n\n    const [defaultLangPropsNode] = propNodes;\n\n    const {\n      seo: { seoTitle },\n      title,\n      subtitle,\n      backToHomeText,\n    } = defaultLangPropsNode;\n\n    const defaultLangProps = {\n      headProps: {\n        title: seoTitle,\n        locale: defaultLanguage,\n      },\n      heroProps: {\n        title,\n        subtitle,\n      },\n      linkProps: {\n        children: backToHomeText,\n        to: '/',\n      },\n    };\n\n    const getProps = () => {\n      const isDefaultLangStored = isDefaultStored(\n        appLangCodes,\n        storedLocale,\n        defaultLanguage\n      );\n      if (isDefaultLangStored) return { ...defaultLangProps };\n\n      const isSecondaryLangStored = isSecondaryStored(\n        appLangCodes,\n        storedLocale,\n        defaultLanguage\n      );\n      if (isSecondaryLangStored) {\n        const storedLangProps = propNodes.find(\n          ({ locale }) => locale === storedLocale\n        );\n\n        return {\n          headProps: {\n            title: storedLangProps.seo.seoTitle,\n            locale: storedLocale,\n          },\n          heroProps: {\n            title: storedLangProps.title,\n            subtitle: storedLangProps.subtitle,\n          },\n          linkProps: {\n            children: storedLangProps.backToHomeText,\n            to: `/${storedLocale}`,\n          },\n        };\n      }\n\n      const matchingLangCode = getPreferredLang(browserLangCodes, appLangCodes);\n\n      const defaultLanguageMatch = matchingLangCode === defaultLanguage;\n\n      if (!storedLocale && defaultLanguageMatch) {\n        storeLocale(defaultLanguage);\n        return { ...defaultLangProps };\n      }\n\n      const secondaryLanguages = getSecondaryLangs(appLangCodes);\n      const secondaryLanguageMatch = findSecondaryLang(\n        secondaryLanguages,\n        matchingLangCode\n      );\n      if (!storedLocale && secondaryLanguageMatch) {\n        storeLocale(secondaryLanguageMatch);\n        const secondaryLangProps = propNodes.find(\n          ({ locale }) => locale === secondaryLanguageMatch\n        );\n        return {\n          headProps: {\n            title: secondaryLangProps.seo.seotitle,\n            locale: secondaryLanguageMatch,\n          },\n          heroProps: {\n            title: secondaryLangProps.title,\n            subtitle: secondaryLangProps.subtitle,\n          },\n          linkProps: {\n            children: secondaryLangProps.backToHomeText,\n            to: `/${secondaryLanguageMatch}`,\n          },\n        };\n      }\n      return { ...defaultLangProps };\n    };\n\n    const { headProps, heroProps, linkProps } = getProps();\n\n    return (\n      <>\n        <NotFoundPageHead {...headProps} />\n        <Hero\n          {...heroProps}\n          fullView\n          centered\n          button={\n            <Link\n              {...linkProps}\n              className=\"classicButton classicButtonOutline\"\n            />\n          }\n        />\n      </>\n    );\n  }\n  return null;\n};\n\nexport default NotFoundPage;\n"],"names":["HeroWrapper","styled","section","withConfig","componentId","_ref","fullView","HeroContainer","div","_ref2","centered","HeroTextBox","_ref3","Hero","_ref4","alt","title","subtitle","button","sectionChildren","hasDivider","React","HeroAlt","HeroTitle","HeroSubtitle","Divider","bottom","NotFoundPageHead","locale","isRtl","isRtlLang","Helmet","lang","dir","rel","href","type","data","useStaticQuery","defaultLanguage","useDefaultLanguage","locales","datoCmsSite","appLangCodes","_toConsumableArray","storedLocale","getStoredLocale","isSSR","browserLangCodes","navigator","languages","propNodes","allDatoCmsNotFoundPage","nodes","defaultLangPropsNode","seoTitle","seo","backToHomeText","defaultLangProps","headProps","heroProps","linkProps","children","to","_getProps","isDefaultStored","Object","assign","isSecondaryStored","storedLangProps","find","matchingLangCode","getPreferredLang","storeLocale","secondaryLanguages","getSecondaryLangs","secondaryLanguageMatch","findSecondaryLang","secondaryLangProps","seotitle","getProps","Link","className"],"sourceRoot":""}