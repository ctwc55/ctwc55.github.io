{"version":3,"file":"component---src-templates-other-pages-jsx-f2f7b153277bfb791d11.js","mappings":"uNAKMA,EAAcC,EAAAA,QAAAA,QAAAA,WAAH,6BAAGA,CAAH,sMAKL,qBAAGC,UAA2B,WAOpCC,EAAgBF,EAAAA,QAAAA,IAAAA,WAAH,6BAAGA,CAAH,qIAIE,qBAAGG,UAA2B,YAK7CC,EAAcJ,EAAAA,QAAAA,IAAAA,WAAH,6BAAGA,CAAH,qJAKE,qBAAGG,UAA2B,YAMpCE,EAAO,SAAC,GAAD,IAClBJ,EADkB,EAClBA,SACAE,EAFkB,EAElBA,SACAG,EAHkB,EAGlBA,IACAC,EAJkB,EAIlBA,MACAC,EALkB,EAKlBA,SACAC,EANkB,EAMlBA,OACAC,EAPkB,EAOlBA,gBACAC,EARkB,EAQlBA,WARkB,OAUlB,gBAACZ,EAAD,CAAaE,SAAUA,GACrB,gBAACC,EAAD,CAAeC,SAAUA,GACvB,gBAACC,EAAD,CAAaD,SAAUA,GACpBG,GAAO,gBAAC,KAAD,KAAUA,GAClB,gBAAC,KAAD,CAAWH,SAAUA,GAAWI,GAChC,gBAAC,KAAD,CAAcJ,SAAUA,GAAWK,GAClCC,GAEFC,GAEFC,GAAc,gBAAC,KAAD,CAASC,QAAM,O,wICrD5BC,GAAeC,EAAAA,EAAAA,KAAH,yiDA+GZC,EAAiBf,EAAAA,QAAAA,IAAAA,WAAH,6BAAGA,CAAH,0cAChBa,GAEA,qBAAGG,OAECF,EAAAA,EAAAA,KADC,mCAODA,EAAAA,EAAAA,KAPC,oCAiBM,qBAAGG,MAAqB,eAAiB,kBAExC,qBAAGd,SAA2B,SAAW,aA4B5Ce,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjBH,GAAUI,EAAAA,EAAAA,KAAVJ,MACR,OAAO,gBAACD,EAAD,CAAgBC,MAAOA,GAAQG,IAKlCE,EAAoBrB,EAAAA,QAAAA,IAAAA,WAAH,6BAAGA,CAAH,6zBACnBa,GAEA,qBAAGG,OAECF,EAAAA,EAAAA,KADC,mCAODA,EAAAA,EAAAA,KAPC,oCAsEIQ,EAAc,SAAC,GAAkB,IAAhBH,EAAe,EAAfA,SACpBH,GAAUI,EAAAA,EAAAA,KAAVJ,MACR,OAAO,gBAACK,EAAD,CAAmBL,MAAOA,GAAQG,IAG9BI,EAAgBvB,EAAAA,QAAAA,IAAAA,WAAH,6BAAGA,CAAH,6c,+GCvG1B,UAjI2B,SAAC,GAAD,UACzBwB,KACEC,iBAAoBC,EAFG,EAEHA,IAAKC,EAFF,EAEEA,eAE3BC,EAJyB,EAIzBA,YAJyB,OAMzB,gBAAC,IAAD,CACEC,SAAUD,EACVE,SAAUJ,MAAAA,OAAF,EAAEA,EAAKI,SACfC,eAAgBL,MAAAA,OAAF,EAAEA,EAAKK,eACrBC,SAAUN,MAAAA,GAAF,UAAEA,EAAKM,gBAAP,aAAE,EAAeC,cAExBN,MAAAA,OAAA,EAAAA,EAAgBO,QACf,gBAAC,KAAD,CACEV,KAAMG,EACNQ,YAAa,YAgBN,IAAD,IAfJC,OACEC,EAcE,EAdFA,WACAC,EAaE,EAbFA,QACAC,EAYE,EAZFA,UACAC,EAWE,EAXFA,aACAC,EAUE,EAVFA,MACAlC,EASE,EATFA,MACAmC,EAQE,EARFA,KACAC,EAOE,EAPFA,kBACAC,EAME,EANFA,wBACAC,EAKE,EALFA,mBACAC,EAIE,EAJFA,yBACAC,EAGE,EAHFA,kBACAC,EAEE,EAFFA,wBAGF,OAAQX,GACN,IAAK,cACH,OACE,gBAAC,IAAD,CAAM/B,IAAKgC,EAAS/B,MAAOgC,EAAW/B,SAAUgC,IAEpD,IAAK,0BACH,OACE,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAmBS,QAAM,GACvB,uBAAKC,IAAKT,EAAMU,IAAK7C,IAAKmC,EAAMnC,OAElC,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAS8C,GAAG,OACV,gBAAC,KAAD,KAAgB7C,GAChB,gBAAC,KAAD,CAAU6C,GAAG,OACX,gBAAC,KAAD,CACE5B,KAAMkB,EACNW,mBAAoB,gBACRC,EADQ,EAClBlB,OAAUkB,GACVnC,EAFkB,EAElBA,SACAoC,EAHkB,EAGlBA,gBAHkB,OAKlB,gBAAC,IAAD,iBAAeA,EAAf,CAAgCC,SAAUF,IACvCnC,WAUrB,IAAK,2BACH,OACE,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAASiC,GAAG,OACV,gBAAC,KAAD,KAAgB7C,GAChB,gBAAC,KAAD,CAAU6C,GAAG,OACX,gBAAC,KAAD,CACE5B,KAAMkB,EACNW,mBAAoB,gBACRC,EADQ,EAClBlB,OAAUkB,GACVnC,EAFkB,EAElBA,SACAoC,EAHkB,EAGlBA,gBAHkB,OAKlB,gBAAC,IAAD,iBAAeA,EAAf,CAAgCC,SAAUF,IACvCnC,SAOb,gBAAC,KAAD,CAAmB8B,QAAM,GACvB,uBAAKC,IAAKT,EAAMU,IAAK7C,IAAKmC,EAAMnC,SAK1C,IAAK,0BACH,OACE,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAASW,OAAK,GACZ,gBAAC,KAAD,KACG0B,GAEH,gBAAC,KAAD,KAAWC,IAEb,gBAAC,KAAD,CAAS3B,OAAK,GACZ,gBAAC,KAAD,KACG4B,GAEH,gBAAC,KAAD,KAAWC,IAEb,gBAAC,KAAD,CAAS7B,OAAK,GACZ,gBAAC,KAAD,KACG8B,GAEH,gBAAC,KAAD,KAAWC,MAKrB,QACE,OAAO","sources":["webpack://headless-gatsby-multilang/./src/components/Layout/Hero/index.jsx","webpack://headless-gatsby-multilang/./src/components/Layout/SharedStyles/TextContainers.jsx","webpack://headless-gatsby-multilang/./src/templates/OtherPages.jsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { HeroSubtitle, HeroTitle, HeroAlt } from '../SharedStyles/Headings';\r\nimport { Divider } from '../SharedStyles/Sections';\r\n\r\nconst HeroWrapper = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: ${({ fullView }) => fullView && '100vh'};\r\n  padding: var(--globalPaddingTb) var(--globalPaddingLr);\r\n  flex-direction: column;\r\n  position: relative;\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nconst HeroContainer = styled.div`\r\n  width: var(--globalContainer);\r\n  display: grid;\r\n  row-gap: var(--gapXL);\r\n  justify-content: ${({ centered }) => centered && 'center'};\r\n  width: 100%;\r\n  max-width: var(--globalContainer);\r\n`;\r\n\r\nconst HeroTextBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  row-gap: var(--gapRegular);\r\n  width: 600px;\r\n  justify-items: ${({ centered }) => centered && 'center'};\r\n  @media screen and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Hero = ({\r\n  fullView,\r\n  centered,\r\n  alt,\r\n  title,\r\n  subtitle,\r\n  button,\r\n  sectionChildren,\r\n  hasDivider,\r\n}) => (\r\n  <HeroWrapper fullView={fullView}>\r\n    <HeroContainer centered={centered}>\r\n      <HeroTextBox centered={centered}>\r\n        {alt && <HeroAlt>{alt}</HeroAlt>}\r\n        <HeroTitle centered={centered}>{title}</HeroTitle>\r\n        <HeroSubtitle centered={centered}>{subtitle}</HeroSubtitle>\r\n        {button}\r\n      </HeroTextBox>\r\n      {sectionChildren}\r\n    </HeroContainer>\r\n    {hasDivider && <Divider bottom />}\r\n  </HeroWrapper>\r\n);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useTextDirection } from '../../../hooks/useTextDirection';\r\n\r\nconst commonStyles = css`\r\n  & ol {\r\n    list-style-type: decimal;\r\n    margin: var(--paragraphMargin);\r\n    line-height: 1.6;\r\n\r\n    & li {\r\n      & > ol {\r\n        list-style-type: lower-roman;\r\n        margin: var(--listMargin);\r\n      }\r\n      & p {\r\n        margin: 0;\r\n      }\r\n      &::marker {\r\n        color: var(--baseTextColor);\r\n        font-size: var(--baseL);\r\n      }\r\n    }\r\n  }\r\n\r\n  & ul {\r\n    list-style-type: disc;\r\n    margin: var(--paragraphMargin);\r\n    line-height: 1.6;\r\n\r\n    & li {\r\n      & > ul {\r\n        margin: var(--listMargin);\r\n      }\r\n      & p {\r\n        margin: 0;\r\n      }\r\n      &::marker {\r\n        color: var(--baseTextColor);\r\n        font-size: var(--baseM);\r\n      }\r\n    }\r\n  }\r\n\r\n  & a {\r\n    /* color: var(--primaryColor); */\r\n    color: LightSlateGrey;\r\n    /* text-decoration: underline; */\r\n    text-decoration: none;\r\n\r\n    padding-bottom: 1px;\r\n    background:\r\n    linear-gradient(\r\n        to right,\r\n        rgba(100, 200, 200, 1),\r\n        rgba(100, 200, 200, 1)\r\n    ),\r\n    linear-gradient(\r\n        to right,\r\n        rgba(255, 0, 0, 1),\r\n        rgba(255, 0, 180, 1),\r\n        rgba(0, 100, 200, 1)\r\n    );\r\n    background-size: 100% 3px, 0 3px;\r\n    background-position: 100% 100%, 0 100%;\r\n    background-repeat: no-repeat;\r\n    transition: background-size 400ms;\r\n\r\n    & > code {\r\n      background: var(--inlineCodeBackgroundColor);\r\n      padding: 0.1em 0.2em;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n\r\n  & a:hover {\r\n    background-size: 0 3px, 100% 3px;\r\n  }\r\n\r\n  & p > code {\r\n    background: var(--inlineCodeBackgroundColor);\r\n    color: var(--inlineCodeTextColor);\r\n    padding: 0.1em 0.2em;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  /* Code block styles - start */\r\n\r\n  & pre {\r\n    padding: var(--globalPaddingLr) !important;\r\n    border-radius: var(--defaultRadius) !important;\r\n    margin: var(--paragraphMargin) !important;\r\n    background: var(--codeBlockBackgroundColor) none repeat scroll 0% 0% !important;\r\n    border: var(--borderSmall) solid var(--dividerColor) !important;\r\n\r\n    @media screen and (max-width: 800px) {\r\n      border-radius: 0 !important;\r\n      margin: var(--paragraphBottomMargin) calc(var(--globalPaddingLr) * -1) !important;\r\n    }\r\n\r\n    & code {\r\n      font-family: var(--defaultCodeStack) !important;\r\n    }\r\n  }\r\n\r\n  /* Code block styles - end */\r\n\r\n  & mark {\r\n    background: var(--markBackgroundColor);\r\n    color: var(--markTextColor);\r\n  }\r\n`;\r\n\r\n// Rich Text Container - Used for common mdx or StructuredText containers outside the blog\r\n\r\nconst RichTextStyles = styled.div`\r\n  ${commonStyles}\r\n\r\n  ${({ isRtl }) =>\r\n    isRtl\r\n      ? css`\r\n          ol,\r\n          ul {\r\n            padding-right: 1.33em;\r\n          }\r\n        `\r\n      : css`\r\n          ol,\r\n          ul {\r\n            padding-left: 1.33em;\r\n          }\r\n        `}\r\n\r\n  --paragraphMargin: 0 0 1em 0;\r\n  --listMargin: 0 0 0.33em 0;\r\n  color: var(--baseTextColor);\r\n  font-size: ${({ small }) => (small ? 'var(--baseS)' : 'var(--baseM)')};\r\n  line-height: 1.4;\r\n  text-align: ${({ centered }) => (centered ? 'center' : 'inherit')};\r\n\r\n  & a {\r\n    color: var(--primaryColor);\r\n    text-decoration: underline;\r\n  }\r\n\r\n  & > p {\r\n    margin: var(--paragraphMargin);\r\n\r\n    &:only-child,\r\n    &:last-child {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  & code {\r\n    background: var(--inlineCodeBackgroundColor);\r\n    padding: 0.1em 0.2em;\r\n    border-radius: 5px;\r\n    color: var(--inlineCodeTextColor);\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: var(--baseMMobile);\r\n  }\r\n`;\r\n\r\nexport const RichText = ({ children }) => {\r\n  const { isRtl } = useTextDirection();\r\n  return <RichTextStyles isRtl={isRtl}>{children}</RichTextStyles>;\r\n};\r\n\r\n// StructuredText container for the article body\r\n\r\nconst ArticleBodyStyles = styled.div`\r\n  ${commonStyles}\r\n\r\n  ${({ isRtl }) =>\r\n    isRtl\r\n      ? css`\r\n          ol,\r\n          ul {\r\n            padding-right: 1.33em;\r\n          }\r\n        `\r\n      : css`\r\n          ol,\r\n          ul {\r\n            padding-left: 1.33em;\r\n          }\r\n        `}\r\n\r\n  --paragraphBottomMargin: 1.6em;\r\n  --paragraphMargin: 0 0 var(--paragraphBottomMargin) 0;\r\n  --headingsMargin: 0 0 0.8em 0;\r\n  --listMargin: 0 0 0.33em 0;\r\n  width: var(--articleContainer);\r\n\r\n  & p {\r\n    color: var(--baseTextColor);\r\n    font-size: var(--baseL);\r\n    margin: var(--paragraphMargin);\r\n\r\n    &:only-child,\r\n    &:last-child {\r\n      margin: 0;\r\n    }\r\n\r\n    & + h2,\r\n    + h3 {\r\n      margin: 2em 0 0.8em 0;\r\n    }\r\n  }\r\n\r\n  & h2,\r\n  h3 {\r\n    line-height: var(--headingsLineHeight);\r\n    color: var(--headingsColor);\r\n    margin: var(--headingsMargin);\r\n  }\r\n\r\n  & h2 {\r\n    font-size: var(--headingM);\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--headingS);\r\n    }\r\n  }\r\n\r\n  & h3 {\r\n    font-size: var(--headingS);\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--baseL);\r\n    }\r\n  }\r\n\r\n  & hr {\r\n    margin: calc(var(--paragraphBottomMargin) * 2) 0;\r\n    color: var(--dividerColor);\r\n    background-color: var(--dividerColor);\r\n    border: none;\r\n    height: var(--borderSmall);\r\n  }\r\n\r\n  @media screen and (max-width: 860px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const ArticleBody = ({ children }) => {\r\n  const { isRtl } = useTextDirection();\r\n  return <ArticleBodyStyles isRtl={isRtl}>{children}</ArticleBodyStyles>;\r\n};\r\n\r\nexport const CodeContainer = styled.div`\r\n  position: absolute;\r\n  width: min-content;\r\n  padding: 0 0.4em;\r\n  background: var(--primaryColor);\r\n  border-radius: calc(var(--defaultRadius) / 2);\r\n  position: absolute;\r\n  text-transform: uppercase;\r\n  font-size: var(--baseS);\r\n  color: white;\r\n  right: calc(var(--defaultRadius) / 2);\r\n  top: calc(var(--defaultRadius) / 2);\r\n\r\n  @media screen and (max-width: 800px) {\r\n    left: 0 !important;\r\n    top: calc(calc(var(--baseS) / 1.5) * -1) !important;\r\n    right: unset !important;\r\n    border-radius: calc(var(--defaultRadius) / 2) 0;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport { StructuredText } from 'react-datocms';\r\nimport { Navigator } from '../components/LanguageHelpers/Navigator';\r\nimport { PageWrapper } from '../components/Layout/PageWrapper';\r\nimport { Hero } from '../components/Layout/Hero';\r\nimport {\r\n  SectionContainerGridThreeCols,\r\n  SectionContainerFlexTwoCols,\r\n  SectionWrapper,\r\n  SectionContainerFlexTwoColsReverse,\r\n  ColumnFlexTwoCols,\r\n  TextBox,\r\n} from '../components/Layout/SharedStyles/Sections';\r\nimport {\r\n  HeadingMedium,\r\n  HeadingSmallWithTip,\r\n} from '../components/Layout/SharedStyles/Headings';\r\nimport { RichText } from '../components/Layout/SharedStyles/TextContainers';\r\n\r\nconst OtherPagesTemplate = ({\r\n  data: {\r\n    datoCmsOtherPage: { seo, structuredBody },\r\n  },\r\n  pageContext,\r\n}) => (\r\n  <PageWrapper\r\n    pageData={pageContext}\r\n    seoTitle={seo?.seoTitle}\r\n    seoDescription={seo?.seoDescription}\r\n    seoImage={seo?.seoImage?.seoImageUrl}\r\n  >\r\n    {structuredBody?.value && (\r\n      <StructuredText\r\n        data={structuredBody}\r\n        renderBlock={({\r\n          record: {\r\n            __typename,\r\n            heroAlt,\r\n            heroTitle,\r\n            heroSubtitle,\r\n            image,\r\n            title,\r\n            text,\r\n            firstFeatureTitle,\r\n            firstFeatureDescription,\r\n            secondFeatureTitle,\r\n            secondFeatureDescription,\r\n            thirdFeatureTitle,\r\n            thirdFeatureDescription,\r\n          },\r\n        }) => {\r\n          switch (__typename) {\r\n            case 'DatoCmsHero':\r\n              return (\r\n                <Hero alt={heroAlt} title={heroTitle} subtitle={heroSubtitle} />\r\n              );\r\n            case 'DatoCmsSectionImageLeft':\r\n              return (\r\n                <SectionWrapper>\r\n                  <SectionContainerFlexTwoCols>\r\n                    <ColumnFlexTwoCols hasImg>\r\n                      <img src={image.url} alt={image.alt} />\r\n                    </ColumnFlexTwoCols>\r\n                    <ColumnFlexTwoCols>\r\n                      <TextBox as=\"div\">\r\n                        <HeadingMedium>{title}</HeadingMedium>\r\n                        <RichText as=\"div\">\r\n                          <StructuredText\r\n                            data={text}\r\n                            renderLinkToRecord={({\r\n                              record: { id },\r\n                              children,\r\n                              transformedMeta,\r\n                            }) => (\r\n                              <Navigator {...transformedMeta} recordId={id}>\r\n                                {children}\r\n                              </Navigator>\r\n                            )}\r\n                          />\r\n                        </RichText>\r\n                      </TextBox>\r\n                    </ColumnFlexTwoCols>\r\n                  </SectionContainerFlexTwoCols>\r\n                </SectionWrapper>\r\n              );\r\n            case 'DatoCmsSectionImageRight':\r\n              return (\r\n                <SectionWrapper>\r\n                  <SectionContainerFlexTwoColsReverse>\r\n                    <ColumnFlexTwoCols>\r\n                      <TextBox as=\"div\">\r\n                        <HeadingMedium>{title}</HeadingMedium>\r\n                        <RichText as=\"div\">\r\n                          <StructuredText\r\n                            data={text}\r\n                            renderLinkToRecord={({\r\n                              record: { id },\r\n                              children,\r\n                              transformedMeta,\r\n                            }) => (\r\n                              <Navigator {...transformedMeta} recordId={id}>\r\n                                {children}\r\n                              </Navigator>\r\n                            )}\r\n                          />\r\n                        </RichText>\r\n                      </TextBox>\r\n                    </ColumnFlexTwoCols>\r\n                    <ColumnFlexTwoCols hasImg>\r\n                      <img src={image.url} alt={image.alt} />\r\n                    </ColumnFlexTwoCols>\r\n                  </SectionContainerFlexTwoColsReverse>\r\n                </SectionWrapper>\r\n              );\r\n            case 'DatoCmsThreeFeaturesSet':\r\n              return (\r\n                <SectionWrapper>\r\n                  <SectionContainerGridThreeCols>\r\n                    <TextBox small>\r\n                      <HeadingSmallWithTip>\r\n                        {firstFeatureTitle}\r\n                      </HeadingSmallWithTip>\r\n                      <RichText>{firstFeatureDescription}</RichText>\r\n                    </TextBox>\r\n                    <TextBox small>\r\n                      <HeadingSmallWithTip>\r\n                        {secondFeatureTitle}\r\n                      </HeadingSmallWithTip>\r\n                      <RichText>{secondFeatureDescription}</RichText>\r\n                    </TextBox>\r\n                    <TextBox small>\r\n                      <HeadingSmallWithTip>\r\n                        {thirdFeatureTitle}\r\n                      </HeadingSmallWithTip>\r\n                      <RichText>{thirdFeatureDescription}</RichText>\r\n                    </TextBox>\r\n                  </SectionContainerGridThreeCols>\r\n                </SectionWrapper>\r\n              );\r\n            default:\r\n              return null;\r\n          }\r\n        }}\r\n      />\r\n    )}\r\n  </PageWrapper>\r\n);\r\n\r\nexport default OtherPagesTemplate;\r\n\r\nexport const query = graphql`\r\n  query OtherPagesQuery($locale: String!, $id: String!) {\r\n    datoCmsOtherPage(locale: { eq: $locale }, originalId: { eq: $id }) {\r\n      locale\r\n      seo {\r\n        seoTitle: title\r\n        seoDescription: description\r\n        seoImage: image {\r\n          seoImageUrl: url\r\n        }\r\n      }\r\n      structuredBody {\r\n        value\r\n        blocks {\r\n          ... on DatoCmsHero {\r\n            id: originalId\r\n            __typename\r\n            heroTitle\r\n            heroSubtitle\r\n            heroAlt\r\n          }\r\n          ... on DatoCmsSectionImageLeft {\r\n            __typename\r\n            id: originalId\r\n            title\r\n            image {\r\n              url\r\n              gatsbyImageData\r\n              alt\r\n            }\r\n            text {\r\n              value\r\n              links {\r\n                ... on DatoCmsOtherPage {\r\n                  id: originalId\r\n                }\r\n                ... on DatoCmsHomepage {\r\n                  id: originalId\r\n                }\r\n              }\r\n            }\r\n          }\r\n          ... on DatoCmsSectionImageRight {\r\n            __typename\r\n            id: originalId\r\n            title\r\n            image {\r\n              url\r\n              gatsbyImageData\r\n              alt\r\n            }\r\n            text {\r\n              value\r\n              links {\r\n                ... on DatoCmsOtherPage {\r\n                  id: originalId\r\n                }\r\n                ... on DatoCmsHomepage {\r\n                  id: originalId\r\n                }\r\n              }\r\n            }\r\n          }\r\n          ... on DatoCmsThreeFeaturesSet {\r\n            __typename\r\n            id: originalId\r\n            firstFeatureTitle\r\n            firstFeatureDescription\r\n            secondFeatureTitle\r\n            secondFeatureDescription\r\n            thirdFeatureTitle\r\n            thirdFeatureDescription\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["HeroWrapper","styled","fullView","HeroContainer","centered","HeroTextBox","Hero","alt","title","subtitle","button","sectionChildren","hasDivider","bottom","commonStyles","css","RichTextStyles","isRtl","small","RichText","children","useTextDirection","ArticleBodyStyles","ArticleBody","CodeContainer","data","datoCmsOtherPage","seo","structuredBody","pageContext","pageData","seoTitle","seoDescription","seoImage","seoImageUrl","value","renderBlock","record","__typename","heroAlt","heroTitle","heroSubtitle","image","text","firstFeatureTitle","firstFeatureDescription","secondFeatureTitle","secondFeatureDescription","thirdFeatureTitle","thirdFeatureDescription","hasImg","src","url","as","renderLinkToRecord","id","transformedMeta","recordId"],"sourceRoot":""}