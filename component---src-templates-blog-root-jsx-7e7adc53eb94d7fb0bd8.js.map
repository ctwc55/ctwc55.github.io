{"version":3,"file":"component---src-templates-blog-root-jsx-7e7adc53eb94d7fb0bd8.js","mappings":"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","sources":["webpack://headless-gatsby-multilang/./src/components/Layout/Blog/CategoriesMenu.jsx","webpack://headless-gatsby-multilang/./src/components/Layout/Hero/index.jsx","webpack://headless-gatsby-multilang/./src/templates/BlogRoot.jsx"],"sourcesContent":["import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled, { css } from 'styled-components';\nimport { Navigator } from '../../LanguageHelpers/Navigator';\nimport { useTextDirection } from '../../../hooks/useTextDirection';\nimport { usePageLanguage } from '../../../hooks/usePageLanguage';\n\n// Scoped styles\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 var(--globalPaddingLr);\n`;\n\nconst divider = 'var(--borderSmall) solid var(--dividerColor);';\n\nconst ScrollGradientContainer = styled.div`\n  --scrollBarHeight: 6px;\n  position: relative;\n  width: var(--globalContainer);\n  padding-bottom: var(--borderRegular);\n  border-top: ${divider};\n  border-bottom: ${divider};\n  width: 100%;\n  max-width: var(--globalContainer);\n\n  &::after {\n    position: absolute;\n    content: '';\n    width: var(--gapXL);\n    z-index: 2;\n    display: block;\n    height: calc(100% - calc(var(--scrollBarHeight) * 2));\n    top: 0;\n    ${({ isRtl }) =>\n      isRtl\n        ? css`\n            left: 0;\n            background: linear-gradient(\n              to left,\n              var(--backgroundTransparentColor) 25%,\n              var(--backgroundColor) 75%\n            );\n          `\n        : css`\n            right: 0;\n            background: linear-gradient(\n              to right,\n              var(--backgroundTransparentColor) 25%,\n              var(--backgroundColor) 75%\n            );\n          `}\n  }\n`;\n\nconst GradientOverlay = styled.span``;\n\nconst NavContainer = styled.nav`\n  width: var(--globalContainer);\n  padding: var(--gapRegular) 0\n    calc(var(--gapRegular) - calc(var(--scrollBarHeight) / 2)) 0;\n  overflow: auto;\n  scrollbar-width: thin;\n  scrollbar-color: var(--dividerColor) var(--transparent);\n  width: 100%;\n  max-width: var(--globalContainer);\n\n  &::-webkit-scrollbar {\n    height: var(--scrollBarHeight);\n  }\n\n  &::-webkit-scrollbar-track {\n    background: var(--backgroundColorAlt);\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: var(--dividerColor);\n    border-radius: var(--scrollBarHeight);\n    border: none;\n  }\n`;\n\nconst NavList = styled.ul`\n  display: grid;\n  grid-auto-flow: column;\n  width: min-content;\n  column-gap: var(--gapXL);\n\n  & li:last-of-type > a {\n    z-index: 3;\n  }\n`;\n\nconst CategoryLink = styled(Navigator)`\n  color: var(--headingsColor);\n  font-weight: 600;\n  white-space: nowrap;\n  position: relative;\n\n  @media (hover: hover) {\n    &:hover {\n      color: var(--primaryColor);\n    }\n  }\n`;\n\n// Main component\n\nexport const CategoriesMenu = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allDatoCmsCategory(filter: { noTranslate: { ne: true } }) {\n        categoryNodes: nodes {\n          id: originalId\n          locale\n          title\n        }\n      }\n    }\n  `);\n\n  const {\n    allDatoCmsCategory: { categoryNodes },\n  } = data;\n\n  const { pageLanguage } = usePageLanguage();\n  const { isRtl } = useTextDirection();\n\n  return (\n    <Wrapper>\n      <ScrollGradientContainer isRtl={isRtl}>\n        <GradientOverlay />\n        <NavContainer>\n          <NavList>\n            {categoryNodes\n              .filter(({ locale }) => locale === pageLanguage)\n              .map(({ id, title }) => (\n                <li key={title}>\n                  <CategoryLink recordId={id} activeClassName=\"activeClassLink\">\n                    {title}\n                  </CategoryLink>\n                </li>\n              ))}\n          </NavList>\n        </NavContainer>\n      </ScrollGradientContainer>\n    </Wrapper>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { HeroSubtitle, HeroTitle, HeroAlt } from '../SharedStyles/Headings';\nimport { Divider } from '../SharedStyles/Sections';\n\nconst HeroWrapper = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: ${({ fullView }) => fullView && '100vh'};\n  padding: var(--globalPaddingTb) var(--globalPaddingLr);\n  flex-direction: column;\n  position: relative;\n`;\n\nconst HeroContainer = styled.div`\n  width: var(--globalContainer);\n  display: grid;\n  row-gap: var(--gapXL);\n  justify-content: ${({ centered }) => centered && 'center'};\n  width: 100%;\n  max-width: var(--globalContainer);\n`;\n\nconst HeroTextBox = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  row-gap: var(--gapRegular);\n  width: 600px;\n  justify-items: ${({ centered }) => centered && 'center'};\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nexport const Hero = ({\n  fullView,\n  centered,\n  alt,\n  title,\n  subtitle,\n  button,\n  sectionChildren,\n  hasDivider,\n}) => (\n  <HeroWrapper fullView={fullView}>\n    <HeroContainer centered={centered}>\n      <HeroTextBox centered={centered}>\n        {alt && <HeroAlt>{alt}</HeroAlt>}\n        <HeroTitle centered={centered}>{title}</HeroTitle>\n        <HeroSubtitle centered={centered}>{subtitle}</HeroSubtitle>\n        {button}\n      </HeroTextBox>\n      {sectionChildren}\n    </HeroContainer>\n    {hasDivider && <Divider bottom />}\n  </HeroWrapper>\n);\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { PageWrapper } from '../components/Layout/PageWrapper';\nimport { Hero } from '../components/Layout/Hero';\nimport {\n  SectionContainerGridThreeCols,\n  SectionWrapper,\n} from '../components/Layout/SharedStyles/Sections';\nimport { ArticleCard, CardImgArtDir } from '../components/Layout/Blog/Cards';\nimport { CategoriesMenu } from '../components/Layout/Blog/CategoriesMenu';\n\nconst BlogRootTemplate = ({\n  data: {\n    datoCmsBlogRoot: {\n      hero: [{ heroTitle, heroSubtitle }],\n      seo,\n    },\n    allDatoCmsBlogPost: { blogPostNodes },\n  },\n  pageContext,\n}) => (\n  <PageWrapper\n    pageData={pageContext}\n    seoTitle={seo?.seoTitle}\n    seoDescription={seo?.seoDescription}\n    seoImage={seo?.seoImage?.seoImageUrl}\n    seo\n  >\n    <Hero title={heroTitle} subtitle={heroSubtitle} />\n    <CategoriesMenu />\n    <SectionWrapper>\n      <SectionContainerGridThreeCols>\n        {blogPostNodes.map(\n          ({\n            id,\n            meta: { updatedAt },\n            coverImage,\n            title,\n            subtitle,\n            author,\n            categoryLink,\n          }) => (\n            <ArticleCard\n              key={id}\n              recordId={id}\n              date={updatedAt}\n              category={categoryLink}\n              cardImg={\n                coverImage &&\n                CardImgArtDir(\n                  coverImage.gatsbyImageData,\n                  coverImage.squaredImage,\n                  title\n                )\n              }\n              title={title}\n              excerpt={subtitle}\n              authorImg={author?.picture.gatsbyImageData}\n              authorAltImg={author?.authorName}\n              authorName={author?.authorName}\n            />\n          )\n        )}\n      </SectionContainerGridThreeCols>\n    </SectionWrapper>\n  </PageWrapper>\n);\n\nexport default BlogRootTemplate;\n\n// Main query\n\nexport const query = graphql`\n  query BlogRootQuery($locale: String!) {\n    allDatoCmsBlogPost(\n      filter: {\n        locale: { eq: $locale }\n        noTranslate: { ne: true }\n        categoryLink: { noTranslate: { ne: true } }\n      }\n      sort: { order: ASC, fields: meta___updatedAt }\n    ) {\n      blogPostNodes: nodes {\n        locale\n        id: originalId\n        title\n        subtitle\n        noTranslate\n        meta {\n          updatedAt\n        }\n        categoryLink {\n          noTranslate\n          title\n        }\n        coverImage {\n          gatsbyImageData(\n            width: 300\n            height: 120\n            placeholder: NONE\n            forceBlurhash: false\n          )\n          squaredImage: gatsbyImageData(\n            width: 100\n            height: 100\n            imgixParams: { ar: \"1\", fit: \"crop\" }\n          )\n        }\n        author {\n          authorName: name\n          picture {\n            gatsbyImageData(height: 30, width: 30, placeholder: NONE)\n          }\n        }\n      }\n    }\n    datoCmsBlogRoot(locale: { eq: $locale }) {\n      locale\n      seo {\n        seoTitle: title\n        seoDescription: description\n        seoImage: image {\n          seoImageUrl: url\n        }\n      }\n      hero {\n        heroTitle\n        heroSubtitle\n      }\n    }\n  }\n`;\n"],"names":["Wrapper","styled","div","withConfig","componentId","divider","ScrollGradientContainer","_ref","isRtl","css","GradientOverlay","span","NavContainer","nav","NavList","ul","CategoryLink","Navigator","CategoriesMenu","categoryNodes","useStaticQuery","allDatoCmsCategory","pageLanguage","usePageLanguage","useTextDirection","React","filter","_ref2","locale","map","_ref3","id","title","key","recordId","activeClassName","HeroWrapper","section","fullView","HeroContainer","centered","HeroTextBox","Hero","_ref4","alt","subtitle","button","sectionChildren","hasDivider","HeroAlt","HeroTitle","HeroSubtitle","Divider","bottom","_seo$seoImage","_ref$data","data","_ref$data$datoCmsBlog","datoCmsBlogRoot","_ref$data$datoCmsBlog3","hero","heroTitle","heroSubtitle","seo","blogPostNodes","allDatoCmsBlogPost","pageContext","PageWrapper","pageData","seoTitle","seoDescription","seoImage","seoImageUrl","SectionWrapper","SectionContainerGridThreeCols","updatedAt","meta","coverImage","author","categoryLink","ArticleCard","date","category","cardImg","CardImgArtDir","gatsbyImageData","squaredImage","excerpt","authorImg","picture","authorAltImg","authorName"],"sourceRoot":""}