{"version":3,"file":"component---src-templates-home-jsx-82bd06b9171ac6294783.js","mappings":"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","sources":["webpack://headless-gatsby-multilang/./src/components/Layout/SharedStyles/TextContainers.jsx","webpack://headless-gatsby-multilang/./src/components/Layout/HeroHome/index.jsx","webpack://headless-gatsby-multilang/./src/templates/Home.jsx"],"sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useTextDirection } from '../../../hooks/useTextDirection';\n\nconst commonStyles = css`\n  & ol {\n    list-style-type: decimal;\n    margin: var(--paragraphMargin);\n    line-height: 1.6;\n\n    & li {\n      & > ol {\n        list-style-type: lower-roman;\n        margin: var(--listMargin);\n      }\n      & p {\n        margin: 0;\n      }\n      &::marker {\n        color: var(--baseTextColor);\n        font-size: var(--baseL);\n      }\n    }\n  }\n\n  & ul {\n    list-style-type: disc;\n    margin: var(--paragraphMargin);\n    line-height: 1.6;\n\n    & li {\n      & > ul {\n        margin: var(--listMargin);\n      }\n      & p {\n        margin: 0;\n      }\n      &::marker {\n        color: var(--baseTextColor);\n        font-size: var(--baseM);\n      }\n    }\n  }\n\n  & a {\n    /* color: var(--primaryColor); */\n    color: LightSlateGrey;\n    /* text-decoration: underline; */\n    text-decoration: none;\n\n    padding-bottom: 1px;\n    background:\n    linear-gradient(\n        to right,\n        rgba(100, 200, 200, 1),\n        rgba(100, 200, 200, 1)\n    ),\n    linear-gradient(\n        to right,\n        rgba(255, 0, 0, 1),\n        rgba(255, 0, 180, 1),\n        rgba(0, 100, 200, 1)\n    );\n    background-size: 100% 3px, 0 3px;\n    background-position: 100% 100%, 0 100%;\n    background-repeat: no-repeat;\n    transition: background-size 400ms;\n\n    & > code {\n      background: var(--inlineCodeBackgroundColor);\n      padding: 0.1em 0.2em;\n      border-radius: 5px;\n    }\n  }\n\n  & a:hover {\n    background-size: 0 3px, 100% 3px;\n  }\n\n  & p > code {\n    background: var(--inlineCodeBackgroundColor);\n    color: var(--inlineCodeTextColor);\n    padding: 0.1em 0.2em;\n    border-radius: 5px;\n  }\n\n  /* Code block styles - start */\n\n  & pre {\n    padding: var(--globalPaddingLr) !important;\n    border-radius: var(--defaultRadius) !important;\n    margin: var(--paragraphMargin) !important;\n    background: var(--codeBlockBackgroundColor) none repeat scroll 0% 0% !important;\n    border: var(--borderSmall) solid var(--dividerColor) !important;\n\n    @media screen and (max-width: 800px) {\n      border-radius: 0 !important;\n      margin: var(--paragraphBottomMargin) calc(var(--globalPaddingLr) * -1) !important;\n    }\n\n    & code {\n      font-family: var(--defaultCodeStack) !important;\n    }\n  }\n\n  /* Code block styles - end */\n\n  & mark {\n    background: var(--markBackgroundColor);\n    color: var(--markTextColor);\n  }\n`;\n\n// Rich Text Container - Used for common mdx or StructuredText containers outside the blog\n\nconst RichTextStyles = styled.div`\n  ${commonStyles}\n\n  ${({ isRtl }) =>\n    isRtl\n      ? css`\n          ol,\n          ul {\n            padding-right: 1.33em;\n          }\n        `\n      : css`\n          ol,\n          ul {\n            padding-left: 1.33em;\n          }\n        `}\n\n  --paragraphMargin: 0 0 1em 0;\n  --listMargin: 0 0 0.33em 0;\n  color: var(--baseTextColor);\n  font-size: ${({ small }) => (small ? 'var(--baseS)' : 'var(--baseM)')};\n  line-height: 1.4;\n  text-align: ${({ centered }) => (centered ? 'center' : 'inherit')};\n\n  & a {\n    color: var(--primaryColor);\n    text-decoration: underline;\n  }\n\n  & > p {\n    margin: var(--paragraphMargin);\n\n    &:only-child,\n    &:last-child {\n      margin: 0;\n    }\n  }\n\n  & code {\n    background: var(--inlineCodeBackgroundColor);\n    padding: 0.1em 0.2em;\n    border-radius: 5px;\n    color: var(--inlineCodeTextColor);\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: var(--baseMMobile);\n  }\n`;\n\nexport const RichText = ({ children }) => {\n  const { isRtl } = useTextDirection();\n  return <RichTextStyles isRtl={isRtl}>{children}</RichTextStyles>;\n};\n\n// StructuredText container for the article body\n\nconst ArticleBodyStyles = styled.div`\n  ${commonStyles}\n\n  ${({ isRtl }) =>\n    isRtl\n      ? css`\n          ol,\n          ul {\n            padding-right: 1.33em;\n          }\n        `\n      : css`\n          ol,\n          ul {\n            padding-left: 1.33em;\n          }\n        `}\n\n  --paragraphBottomMargin: 1.6em;\n  --paragraphMargin: 0 0 var(--paragraphBottomMargin) 0;\n  --headingsMargin: 0 0 0.8em 0;\n  --listMargin: 0 0 0.33em 0;\n  width: var(--articleContainer);\n\n  & p {\n    color: var(--baseTextColor);\n    font-size: var(--baseL);\n    margin: var(--paragraphMargin);\n\n    &:only-child,\n    &:last-child {\n      margin: 0;\n    }\n\n    & + h2,\n    + h3 {\n      margin: 2em 0 0.8em 0;\n    }\n  }\n\n  & h2,\n  h3 {\n    line-height: var(--headingsLineHeight);\n    color: var(--headingsColor);\n    margin: var(--headingsMargin);\n  }\n\n  & h2 {\n    font-size: var(--headingM);\n    @media screen and (max-width: 768px) {\n      font-size: var(--headingS);\n    }\n  }\n\n  & h3 {\n    font-size: var(--headingS);\n    @media screen and (max-width: 768px) {\n      font-size: var(--baseL);\n    }\n  }\n\n  & hr {\n    margin: calc(var(--paragraphBottomMargin) * 2) 0;\n    color: var(--dividerColor);\n    background-color: var(--dividerColor);\n    border: none;\n    height: var(--borderSmall);\n  }\n\n  @media screen and (max-width: 860px) {\n    width: 100%;\n  }\n`;\n\nexport const ArticleBody = ({ children }) => {\n  const { isRtl } = useTextDirection();\n  return <ArticleBodyStyles isRtl={isRtl}>{children}</ArticleBodyStyles>;\n};\n\nexport const CodeContainer = styled.div`\n  position: absolute;\n  width: min-content;\n  padding: 0 0.4em;\n  background: var(--primaryColor);\n  border-radius: calc(var(--defaultRadius) / 2);\n  position: absolute;\n  text-transform: uppercase;\n  font-size: var(--baseS);\n  color: white;\n  right: calc(var(--defaultRadius) / 2);\n  top: calc(var(--defaultRadius) / 2);\n\n  @media screen and (max-width: 800px) {\n    left: 0 !important;\n    top: calc(calc(var(--baseS) / 1.5) * -1) !important;\n    right: unset !important;\n    border-radius: calc(var(--defaultRadius) / 2) 0;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { HeroSubtitle, HeroTitle, HeroAlt } from '../SharedStyles/Headings';\nimport { Divider } from '../SharedStyles/Sections';\n\nconst HeroWrapper = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: ${({ fullView }) => fullView && '100vh'};\n  padding: var(--globalPaddingTb) var(--globalPaddingLr);\n  flex-direction: column;\n  position: relative;\n`;\n\nconst HeroContainer = styled.div`\n  width: var(--globalContainer);\n  display: grid;\n  row-gap: var(--gapXL);\n  justify-content: ${({ centered }) => centered && 'center'};\n  width: 100%;\n  max-width: var(--globalContainer);\n`;\n\nconst HeroTextBox = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  row-gap: var(--gapRegular);\n  width: 600px;\n  justify-items: ${({ centered }) => centered && 'center'};\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nexport const Hero = ({\n  fullView,\n  centered,\n  alt,\n  title,\n  subtitle,\n  button,\n  sectionChildren,\n  hasDivider,\n}) => (\n  <HeroWrapper fullView={fullView}>\n    <HeroContainer centered={centered}>\n      <HeroTextBox centered={centered}>\n        {alt && <HeroAlt>{alt}</HeroAlt>}\n        <HeroTitle centered={centered}>{title}</HeroTitle>\n        <HeroSubtitle centered={centered}>{subtitle}</HeroSubtitle>\n        <a href=\"https://hits.seeyoufarm.com\"><img src=\"https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fctwc55.github.io&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=hits&edge_flat=false\" alt=\"hits\"/></a>\n        {button}\n      </HeroTextBox>\n      {sectionChildren}\n    </HeroContainer>\n    {hasDivider && <Divider bottom />}\n  </HeroWrapper>\n);\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { PageWrapper } from '../components/Layout/PageWrapper';\nimport { Hero } from '../components/Layout/HeroHome';\nimport {\n  SectionContainerGridThreeCols,\n  SectionWrapper,\n  SectionTitleContainer,\n  TextBox,\n} from '../components/Layout/SharedStyles/Sections';\nimport {\n  HeadingSmallWithTip,\n  SectionTitle,\n} from '../components/Layout/SharedStyles/Headings';\nimport { RichText } from '../components/Layout/SharedStyles/TextContainers';\nimport { ArticleCard, CardImgArtDir } from '../components/Layout/Blog/Cards';\nimport { Navigator } from '../components/LanguageHelpers/Navigator';\n\nconst HomepageTemplate = ({\n  data: {\n    datoCmsHomepage: {\n      seo,\n      hero: [{ heroAlt, heroTitle, heroSubtitle }],\n      features,\n      featuredPostsTitle,\n    },\n    datoCmsBlogRoot: { id },\n    allBlogPosts: { postNodes },\n    datoCmsMiscTextString: { seeAllButton, seeAllPosts },\n  },\n  pageContext,\n}) => (\n  <PageWrapper\n    pageData={pageContext}\n    seoTitle={seo?.seoTitle}\n    seoDescription={seo?.seoDescription}\n    seoImage={seo?.seoImage?.seoImageUrl}\n  >\n    <Hero\n      hasDivider\n      alt={heroAlt}\n      title={heroTitle}\n      subtitle={heroSubtitle}\n      button={\n        <Navigator className=\"classicButton classicButtonOutline\" recordId={id}>\n          {seeAllPosts}\n        </Navigator>\n      }\n      sectionChildren={\n        <SectionContainerGridThreeCols>\n          {features.map(({ id, title, description }) => (\n            <TextBox small key={id}>\n              <HeadingSmallWithTip>{title}</HeadingSmallWithTip>\n              <RichText>{description}</RichText>\n            </TextBox>\n          ))}\n        </SectionContainerGridThreeCols>\n      }\n    />\n    {postNodes.length > 0 && (\n      <SectionWrapper backgroundColor=\"var(--backgroundColorAlt)\">\n        <SectionTitleContainer hasButton>\n          <SectionTitle>{featuredPostsTitle}</SectionTitle>\n          <Navigator\n            className=\"classicButton classicButtonOutline\"\n            recordId={id}\n          >\n            {seeAllButton}\n          </Navigator>\n        </SectionTitleContainer>\n        <SectionContainerGridThreeCols>\n          {postNodes.map(\n            ({\n              id,\n              meta: { updatedAt },\n              title,\n              coverImage,\n              subtitle,\n              author: {\n                authorName,\n                picture: { authorImageData },\n              },\n              categoryLink,\n            }) => (\n              <ArticleCard\n                key={id}\n                recordId={id}\n                date={updatedAt}\n                category={categoryLink}\n                cardImg={\n                  coverImage &&\n                  CardImgArtDir(\n                    coverImage.gatsbyImageData,\n                    coverImage.squaredImage,\n                    title\n                  )\n                }\n                title={title}\n                excerpt={subtitle}\n                authorImg={authorImageData}\n                authorAltImg={authorName}\n                authorName={authorName}\n              />\n            )\n          )}\n        </SectionContainerGridThreeCols>\n      </SectionWrapper>\n    )}\n  </PageWrapper>\n);\n\nexport default HomepageTemplate;\n\nexport const query = graphql`\n  query HomepageQuery($locale: String!) {\n    datoCmsHomepage(locale: { eq: $locale }) {\n      locale\n      seo {\n        seoTitle: title\n        seoDescription: description\n        seoImage: image {\n          seoImageUrl: url\n        }\n      }\n      hero {\n        heroAlt\n        heroTitle\n        heroSubtitle\n      }\n      features {\n        id: originalId\n        title\n        description\n      }\n      featuredPostsTitle\n    }\n    datoCmsBlogRoot(locale: { eq: $locale }) {\n      locale\n      id: originalId\n    }\n    allBlogPosts: allDatoCmsBlogPost(\n      filter: {\n        locale: { eq: $locale }\n        featuredInHomepage: { eq: true }\n        noTranslate: { ne: true }\n        categoryLink: { noTranslate: { ne: true } }\n      }\n      sort: { order: DESC, fields: meta___updatedAt }\n      limit: 6\n    ) {\n      postNodes: nodes {\n        locale\n        id: originalId\n        meta {\n          updatedAt\n        }\n        categoryLink {\n          title\n        }\n        coverImage {\n          gatsbyImageData(\n            width: 300\n            height: 120\n            placeholder: NONE\n            forceBlurhash: false\n          )\n          squaredImage: gatsbyImageData(\n            width: 100\n            height: 100\n            imgixParams: { ar: \"1\", fit: \"crop\" }\n          )\n        }\n        author {\n          authorName: name\n          picture {\n            authorImageData: gatsbyImageData(\n              height: 30\n              width: 30\n              placeholder: NONE\n            )\n          }\n        }\n        subtitle\n        title\n      }\n    }\n    datoCmsMiscTextString(locale: { eq: $locale }) {\n      locale\n      seeAllButton\n      seeAllPosts\n    }\n  }\n`;\n"],"names":["commonStyles","css","RichTextStyles","styled","div","withConfig","componentId","_ref","isRtl","_ref2","small","_ref3","centered","RichText","_ref4","children","useTextDirection","React","ArticleBodyStyles","_ref5","ArticleBody","_ref6","CodeContainer","HeroWrapper","section","fullView","HeroContainer","HeroTextBox","Hero","alt","title","subtitle","button","sectionChildren","hasDivider","HeroAlt","HeroTitle","HeroSubtitle","href","src","Divider","bottom","_seo$seoImage","_ref$data","data","_ref$data$datoCmsHome","datoCmsHomepage","seo","_ref$data$datoCmsHome3","hero","heroAlt","heroTitle","heroSubtitle","features","featuredPostsTitle","id","datoCmsBlogRoot","postNodes","allBlogPosts","_ref$data$datoCmsMisc","datoCmsMiscTextString","seeAllButton","seeAllPosts","pageContext","PageWrapper","pageData","seoTitle","seoDescription","seoImage","seoImageUrl","Navigator","className","recordId","SectionContainerGridThreeCols","map","description","TextBox","key","HeadingSmallWithTip","length","SectionWrapper","backgroundColor","SectionTitleContainer","hasButton","SectionTitle","updatedAt","meta","coverImage","_ref3$author","author","authorName","authorImageData","picture","categoryLink","ArticleCard","date","category","cardImg","CardImgArtDir","gatsbyImageData","squaredImage","excerpt","authorImg","authorAltImg"],"sourceRoot":""}