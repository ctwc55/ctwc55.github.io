{"version":3,"file":"component---src-templates-home-jsx-e5ca80c287da7c50c6af.js","mappings":"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","sources":["webpack://headless-gatsby-multilang/./src/components/Layout/Blog/Cards.jsx","webpack://headless-gatsby-multilang/./src/components/Layout/SharedStyles/TextContainers.jsx","webpack://headless-gatsby-multilang/./src/functions/formatDateTime.js","webpack://headless-gatsby-multilang/./src/components/Layout/HeroHome/index.jsx","webpack://headless-gatsby-multilang/./src/templates/Home.jsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { GatsbyImage, getImage, withArtDirection } from 'gatsby-plugin-image';\r\nimport { Navigator } from '../../LanguageHelpers/Navigator';\r\nimport { HeadingSmall } from '../SharedStyles/Headings';\r\nimport { usePageLanguage } from '../../../hooks/usePageLanguage';\r\nimport { formatDate } from '../../../functions/formatDateTime';\r\nimport { easeOutTiming } from '../SharedStyles/animations';\r\n\r\n// Scoped styles\r\n\r\nconst CardLink = styled(Navigator)`\r\n  width: 100%;\r\n  row-gap: var(--gapSmall);\r\n  display: grid;\r\n  height: min-content;\r\n  justify-content: start;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    column-gap: var(--gapRegular);\r\n    align-items: initial;\r\n    min-height: 120px;\r\n  }\r\n\r\n  @media (hover: hover) {\r\n    &:hover {\r\n      & h1 {\r\n        color: var(--primaryColor);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardImgContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst CardImg = styled(GatsbyImage)`\r\n  border-radius: var(--defaultRadius);\r\n  z-index: 2;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    --widthMobile: 50px;\r\n    min-width: var(--widthMobile);\r\n    min-height: var(--widthMobile);\r\n  }\r\n\r\n  & picture {\r\n    & img {\r\n      border-radius: var(--defaultRadius);\r\n      @media screen and (max-width: 950px) {\r\n        height: unset !important;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CategoryBox = styled.span`\r\n  width: max-content;\r\n  white-space: nowrap;\r\n  line-height: 0.8;\r\n  position: relative;\r\n  padding: 0.3em 0.5em 0.4em 0.5em;\r\n  margin-bottom: -5px;\r\n  border: var(--borderSmall) solid var(--primaryColor);\r\n  color: var(--primaryColor);\r\n  border-radius: 5px;\r\n  font-size: var(--baseS);\r\n  font-weight: 600;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const CardImgArtDir = (cardImg, cardImgMobile, altImg) => {\r\n  const cardImgs = withArtDirection(getImage(cardImg), [\r\n    {\r\n      media: '(max-width: 950px)',\r\n      image: getImage(cardImgMobile),\r\n    },\r\n  ]);\r\n  return (\r\n    <CardImgContainer>\r\n      <CardImg objectFit=\"cover\" image={cardImgs} alt={altImg || ''} />\r\n    </CardImgContainer>\r\n  );\r\n};\r\n\r\nconst ContentWrapper = styled.div`\r\n  row-gap: var(--gapSmall);\r\n  display: grid;\r\n  height: max-content;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    row-gap: calc(var(--gapSmall) / 1.5);\r\n    grid-column: 2 / span 2;\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled(HeadingSmall)`\r\n  &&& {\r\n    margin-top: ${({ isCategoryTitle }) =>\r\n      isCategoryTitle ? '0.25em' : '-0.25em'};\r\n    line-height: 1.1;\r\n  }\r\n  transition: color ${easeOutTiming};\r\n  margin: calc(var(--gapSmall) - 0.66em) 0;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    margin: unset;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: var(--baseMMobile);\r\n  }\r\n`;\r\n\r\nconst Date = styled.time`\r\n  color: var(--baseTextColor);\r\n  font-size: var(--baseS);\r\n  text-transform: capitalize;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: var(--baseSMobile);\r\n  }\r\n`;\r\n\r\nconst Excerpt = styled.p`\r\n  color: var(--baseTextColor);\r\n  font-size: var(--baseM);\r\n  line-height: 1.3;\r\n`;\r\n\r\nconst AuthorCtaContainer = styled.footer`\r\n  display: flex;\r\n  grid-template-columns: auto auto;\r\n  column-gap: var(--gapRegular);\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst AuthorContainer = styled.div`\r\n  --imgWidthHeight: 25px;\r\n  display: grid;\r\n  grid-template-columns: var(--imgWidthHeight) auto;\r\n  column-gap: var(--gapSmall);\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 950px) {\r\n    --imgWidthHeight: 20px;\r\n    column-gap: calc(var(--gapSmall) - 0.33em);\r\n    grid-template-columns: var(--imgWidthHeight) auto;\r\n  }\r\n`;\r\n\r\nconst AuthorImg = styled(GatsbyImage)`\r\n  width: var(--imgWidthHeight);\r\n  height: var(--imgWidthHeight);\r\n\r\n  & img {\r\n    border-radius: var(--imgWidthHeight);\r\n  }\r\n`;\r\n\r\n// Main components\r\n\r\nexport const ArticleCard = ({\r\n  recordId,\r\n  cardImg,\r\n  date,\r\n  title,\r\n  excerpt,\r\n  authorImg,\r\n  authorName,\r\n  category,\r\n}) => {\r\n  const { pageLanguage } = usePageLanguage();\r\n  return (\r\n    <article>\r\n      <CardLink recordId={recordId}>\r\n        {cardImg}\r\n        <ContentWrapper>\r\n          {category && <CategoryBox>{category.title}</CategoryBox>}\r\n          <Date>{formatDate(date, pageLanguage)}</Date>\r\n          <PostTitle>{title}</PostTitle>\r\n          <Excerpt>{excerpt}</Excerpt>\r\n          <AuthorCtaContainer>\r\n            <AuthorContainer>\r\n              <AuthorImg\r\n                objectFit=\"cover\"\r\n                image={authorImg || ''}\r\n                alt={authorName || ''}\r\n              />\r\n              <Date as=\"address\">{authorName}</Date>\r\n            </AuthorContainer>\r\n          </AuthorCtaContainer>\r\n        </ContentWrapper>\r\n      </CardLink>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport const CategoryCard = ({ recordId, cardImg, title, description }) => (\r\n  <article>\r\n    <CardLink recordId={recordId}>\r\n      {cardImg}\r\n      <ContentWrapper>\r\n        <PostTitle isCategoryTitle>{title}</PostTitle>\r\n        <Excerpt>{description}</Excerpt>\r\n      </ContentWrapper>\r\n    </CardLink>\r\n  </article>\r\n);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useTextDirection } from '../../../hooks/useTextDirection';\r\n\r\nconst commonStyles = css`\r\n  & ol {\r\n    list-style-type: decimal;\r\n    margin: var(--paragraphMargin);\r\n    line-height: 1.6;\r\n\r\n    & li {\r\n      & > ol {\r\n        list-style-type: lower-roman;\r\n        margin: var(--listMargin);\r\n      }\r\n      & p {\r\n        margin: 0;\r\n      }\r\n      &::marker {\r\n        color: var(--baseTextColor);\r\n        font-size: var(--baseL);\r\n      }\r\n    }\r\n  }\r\n\r\n  & ul {\r\n    list-style-type: disc;\r\n    margin: var(--paragraphMargin);\r\n    line-height: 1.6;\r\n\r\n    & li {\r\n      & > ul {\r\n        margin: var(--listMargin);\r\n      }\r\n      & p {\r\n        margin: 0;\r\n      }\r\n      &::marker {\r\n        color: var(--baseTextColor);\r\n        font-size: var(--baseM);\r\n      }\r\n    }\r\n  }\r\n\r\n  & a {\r\n    color: var(--primaryColor);\r\n    text-decoration: underline;\r\n\r\n    & > code {\r\n      background: var(--inlineCodeBackgroundColor);\r\n      padding: 0.1em 0.2em;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n\r\n  & p > code {\r\n    background: var(--inlineCodeBackgroundColor);\r\n    color: var(--inlineCodeTextColor);\r\n    padding: 0.1em 0.2em;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  /* Code block styles - start */\r\n\r\n  & pre {\r\n    padding: var(--globalPaddingLr) !important;\r\n    border-radius: var(--defaultRadius) !important;\r\n    margin: var(--paragraphMargin) !important;\r\n    background: var(--codeBlockBackgroundColor) none repeat scroll 0% 0% !important;\r\n    border: var(--borderSmall) solid var(--dividerColor) !important;\r\n\r\n    @media screen and (max-width: 800px) {\r\n      border-radius: 0 !important;\r\n      margin: var(--paragraphBottomMargin) calc(var(--globalPaddingLr) * -1) !important;\r\n    }\r\n\r\n    & code {\r\n      font-family: var(--defaultCodeStack) !important;\r\n    }\r\n  }\r\n\r\n  /* Code block styles - end */\r\n\r\n  & mark {\r\n    background: var(--markBackgroundColor);\r\n    color: var(--markTextColor);\r\n  }\r\n`;\r\n\r\n// Rich Text Container - Used for common mdx or StructuredText containers outside the blog\r\n\r\nconst RichTextStyles = styled.div`\r\n  ${commonStyles}\r\n\r\n  ${({ isRtl }) =>\r\n    isRtl\r\n      ? css`\r\n          ol,\r\n          ul {\r\n            padding-right: 1.33em;\r\n          }\r\n        `\r\n      : css`\r\n          ol,\r\n          ul {\r\n            padding-left: 1.33em;\r\n          }\r\n        `}\r\n\r\n  --paragraphMargin: 0 0 1em 0;\r\n  --listMargin: 0 0 0.33em 0;\r\n  color: var(--baseTextColor);\r\n  font-size: ${({ small }) => (small ? 'var(--baseS)' : 'var(--baseM)')};\r\n  line-height: 1.4;\r\n  text-align: ${({ centered }) => (centered ? 'center' : 'inherit')};\r\n\r\n  & a {\r\n    color: var(--primaryColor);\r\n    text-decoration: underline;\r\n  }\r\n\r\n  & > p {\r\n    margin: var(--paragraphMargin);\r\n\r\n    &:only-child,\r\n    &:last-child {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  & code {\r\n    background: var(--inlineCodeBackgroundColor);\r\n    padding: 0.1em 0.2em;\r\n    border-radius: 5px;\r\n    color: var(--inlineCodeTextColor);\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: var(--baseMMobile);\r\n  }\r\n`;\r\n\r\nexport const RichText = ({ children }) => {\r\n  const { isRtl } = useTextDirection();\r\n  return <RichTextStyles isRtl={isRtl}>{children}</RichTextStyles>;\r\n};\r\n\r\n// StructuredText container for the article body\r\n\r\nconst ArticleBodyStyles = styled.div`\r\n  ${commonStyles}\r\n\r\n  ${({ isRtl }) =>\r\n    isRtl\r\n      ? css`\r\n          ol,\r\n          ul {\r\n            padding-right: 1.33em;\r\n          }\r\n        `\r\n      : css`\r\n          ol,\r\n          ul {\r\n            padding-left: 1.33em;\r\n          }\r\n        `}\r\n\r\n  --paragraphBottomMargin: 1.6em;\r\n  --paragraphMargin: 0 0 var(--paragraphBottomMargin) 0;\r\n  --headingsMargin: 0 0 0.8em 0;\r\n  --listMargin: 0 0 0.33em 0;\r\n  width: var(--articleContainer);\r\n\r\n  & p {\r\n    color: var(--baseTextColor);\r\n    font-size: var(--baseL);\r\n    margin: var(--paragraphMargin);\r\n\r\n    &:only-child,\r\n    &:last-child {\r\n      margin: 0;\r\n    }\r\n\r\n    & + h2,\r\n    + h3 {\r\n      margin: 2em 0 0.8em 0;\r\n    }\r\n  }\r\n\r\n  & h2,\r\n  h3 {\r\n    line-height: var(--headingsLineHeight);\r\n    color: var(--headingsColor);\r\n    margin: var(--headingsMargin);\r\n  }\r\n\r\n  & h2 {\r\n    font-size: var(--headingM);\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--headingS);\r\n    }\r\n  }\r\n\r\n  & h3 {\r\n    font-size: var(--headingS);\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--baseL);\r\n    }\r\n  }\r\n\r\n  & hr {\r\n    margin: calc(var(--paragraphBottomMargin) * 2) 0;\r\n    color: var(--dividerColor);\r\n    background-color: var(--dividerColor);\r\n    border: none;\r\n    height: var(--borderSmall);\r\n  }\r\n\r\n  @media screen and (max-width: 860px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const ArticleBody = ({ children }) => {\r\n  const { isRtl } = useTextDirection();\r\n  return <ArticleBodyStyles isRtl={isRtl}>{children}</ArticleBodyStyles>;\r\n};\r\n\r\nexport const CodeContainer = styled.div`\r\n  position: absolute;\r\n  width: min-content;\r\n  padding: 0 0.4em;\r\n  background: var(--primaryColor);\r\n  border-radius: calc(var(--defaultRadius) / 2);\r\n  position: absolute;\r\n  text-transform: uppercase;\r\n  font-size: var(--baseS);\r\n  color: white;\r\n  right: calc(var(--defaultRadius) / 2);\r\n  top: calc(var(--defaultRadius) / 2);\r\n\r\n  @media screen and (max-width: 800px) {\r\n    left: 0 !important;\r\n    top: calc(calc(var(--baseS) / 1.5) * -1) !important;\r\n    right: unset !important;\r\n    border-radius: calc(var(--defaultRadius) / 2) 0;\r\n  }\r\n`;\r\n","const timeOptions = {\r\n  hour: '2-digit',\r\n  minute: '2-digit',\r\n};\r\n\r\nconst dateOptions = {\r\n  year: 'numeric',\r\n  month: 'short',\r\n  day: 'numeric',\r\n};\r\n\r\nexport const formatDateTime = (dateString, contextLocale) =>\r\n  new Date(dateString).toLocaleString(contextLocale, {\r\n    ...dateOptions,\r\n    ...timeOptions,\r\n  });\r\n\r\nexport const formatDate = (dateString, contextLocale) =>\r\n  new Date(dateString).toLocaleString(contextLocale, {\r\n    ...dateOptions,\r\n  });\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { HeroSubtitle, HeroTitle, HeroAlt } from '../SharedStyles/Headings';\r\nimport { Divider } from '../SharedStyles/Sections';\r\n\r\nconst HeroWrapper = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: ${({ fullView }) => fullView && '100vh'};\r\n  padding: var(--globalPaddingTb) var(--globalPaddingLr);\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nconst HeroContainer = styled.div`\r\n  width: var(--globalContainer);\r\n  display: grid;\r\n  row-gap: var(--gapXL);\r\n  justify-content: ${({ centered }) => centered && 'center'};\r\n  width: 100%;\r\n  max-width: var(--globalContainer);\r\n`;\r\n\r\nconst HeroTextBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  row-gap: var(--gapRegular);\r\n  width: 600px;\r\n  justify-items: ${({ centered }) => centered && 'center'};\r\n  @media screen and (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Hero = ({\r\n  fullView,\r\n  centered,\r\n  alt,\r\n  title,\r\n  subtitle,\r\n  button,\r\n  sectionChildren,\r\n  hasDivider,\r\n}) => (\r\n  <HeroWrapper fullView={fullView}>\r\n    <HeroContainer centered={centered}>\r\n      <HeroTextBox centered={centered}>\r\n        {alt && <HeroAlt>{alt}</HeroAlt>}\r\n        <HeroTitle centered={centered}>{title}</HeroTitle>\r\n        <HeroSubtitle centered={centered}>{subtitle}</HeroSubtitle>\r\n        <a href=\"https://hits.seeyoufarm.com\"><img src=\"https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fctwc55.github.io&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=hits&edge_flat=false\" alt=\"hits\"/></a>\r\n        {button}\r\n      </HeroTextBox>\r\n      {sectionChildren}\r\n    </HeroContainer>\r\n    {hasDivider && <Divider bottom />}\r\n  </HeroWrapper>\r\n);\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport { PageWrapper } from '../components/Layout/PageWrapper';\r\nimport { Hero } from '../components/Layout/HeroHome';\r\nimport {\r\n  SectionContainerGridThreeCols,\r\n  SectionWrapper,\r\n  SectionTitleContainer,\r\n  TextBox,\r\n} from '../components/Layout/SharedStyles/Sections';\r\nimport {\r\n  HeadingSmallWithTip,\r\n  SectionTitle,\r\n} from '../components/Layout/SharedStyles/Headings';\r\nimport { RichText } from '../components/Layout/SharedStyles/TextContainers';\r\nimport { ArticleCard, CardImgArtDir } from '../components/Layout/Blog/Cards';\r\nimport { Navigator } from '../components/LanguageHelpers/Navigator';\r\n\r\nconst HomepageTemplate = ({\r\n  data: {\r\n    datoCmsHomepage: {\r\n      seo,\r\n      hero: [{ heroAlt, heroTitle, heroSubtitle }],\r\n      features,\r\n      featuredPostsTitle,\r\n    },\r\n    datoCmsBlogRoot: { id },\r\n    allBlogPosts: { postNodes },\r\n    datoCmsMiscTextString: { seeAllButton, seeAllPosts },\r\n  },\r\n  pageContext,\r\n}) => (\r\n  <PageWrapper\r\n    pageData={pageContext}\r\n    seoTitle={seo?.seoTitle}\r\n    seoDescription={seo?.seoDescription}\r\n    seoImage={seo?.seoImage?.seoImageUrl}\r\n  >\r\n    <Hero\r\n      hasDivider\r\n      alt={heroAlt}\r\n      title={heroTitle}\r\n      subtitle={heroSubtitle}\r\n      button={\r\n        <Navigator className=\"classicButton classicButtonOutline\" recordId={id}>\r\n          {seeAllPosts}\r\n        </Navigator>\r\n      }\r\n      sectionChildren={\r\n        <SectionContainerGridThreeCols>\r\n          {features.map(({ id, title, description }) => (\r\n            <TextBox small key={id}>\r\n              <HeadingSmallWithTip>{title}</HeadingSmallWithTip>\r\n              <RichText>{description}</RichText>\r\n            </TextBox>\r\n          ))}\r\n        </SectionContainerGridThreeCols>\r\n      }\r\n    />\r\n    {postNodes.length > 0 && (\r\n      <SectionWrapper backgroundColor=\"var(--backgroundColorAlt)\">\r\n        <SectionTitleContainer hasButton>\r\n          <SectionTitle>{featuredPostsTitle}</SectionTitle>\r\n          <Navigator\r\n            className=\"classicButton classicButtonOutline\"\r\n            recordId={id}\r\n          >\r\n            {seeAllButton}\r\n          </Navigator>\r\n        </SectionTitleContainer>\r\n        <SectionContainerGridThreeCols>\r\n          {postNodes.map(\r\n            ({\r\n              id,\r\n              meta: { updatedAt },\r\n              title,\r\n              coverImage,\r\n              subtitle,\r\n              author: {\r\n                authorName,\r\n                picture: { authorImageData },\r\n              },\r\n              categoryLink,\r\n            }) => (\r\n              <ArticleCard\r\n                key={id}\r\n                recordId={id}\r\n                date={updatedAt}\r\n                category={categoryLink}\r\n                cardImg={\r\n                  coverImage &&\r\n                  CardImgArtDir(\r\n                    coverImage.gatsbyImageData,\r\n                    coverImage.squaredImage,\r\n                    title\r\n                  )\r\n                }\r\n                title={title}\r\n                excerpt={subtitle}\r\n                authorImg={authorImageData}\r\n                authorAltImg={authorName}\r\n                authorName={authorName}\r\n              />\r\n            )\r\n          )}\r\n        </SectionContainerGridThreeCols>\r\n      </SectionWrapper>\r\n    )}\r\n  </PageWrapper>\r\n);\r\n\r\nexport default HomepageTemplate;\r\n\r\nexport const query = graphql`\r\n  query HomepageQuery($locale: String!) {\r\n    datoCmsHomepage(locale: { eq: $locale }) {\r\n      locale\r\n      seo {\r\n        seoTitle: title\r\n        seoDescription: description\r\n        seoImage: image {\r\n          seoImageUrl: url\r\n        }\r\n      }\r\n      hero {\r\n        heroAlt\r\n        heroTitle\r\n        heroSubtitle\r\n      }\r\n      features {\r\n        id: originalId\r\n        title\r\n        description\r\n      }\r\n      featuredPostsTitle\r\n    }\r\n    datoCmsBlogRoot(locale: { eq: $locale }) {\r\n      locale\r\n      id: originalId\r\n    }\r\n    allBlogPosts: allDatoCmsBlogPost(\r\n      filter: {\r\n        locale: { eq: $locale }\r\n        featuredInHomepage: { eq: true }\r\n        noTranslate: { ne: true }\r\n        categoryLink: { noTranslate: { ne: true } }\r\n      }\r\n      sort: { order: ASC, fields: meta___updatedAt }\r\n      limit: 6\r\n    ) {\r\n      postNodes: nodes {\r\n        locale\r\n        id: originalId\r\n        meta {\r\n          updatedAt\r\n        }\r\n        categoryLink {\r\n          title\r\n        }\r\n        coverImage {\r\n          gatsbyImageData(\r\n            width: 300\r\n            height: 120\r\n            placeholder: NONE\r\n            forceBlurhash: false\r\n          )\r\n          squaredImage: gatsbyImageData(\r\n            width: 100\r\n            height: 100\r\n            imgixParams: { ar: \"1\", fit: \"crop\" }\r\n          )\r\n        }\r\n        author {\r\n          authorName: name\r\n          picture {\r\n            authorImageData: gatsbyImageData(\r\n              height: 30\r\n              width: 30\r\n              placeholder: NONE\r\n            )\r\n          }\r\n        }\r\n        subtitle\r\n        title\r\n      }\r\n    }\r\n    datoCmsMiscTextString(locale: { eq: $locale }) {\r\n      locale\r\n      seeAllButton\r\n      seeAllPosts\r\n    }\r\n  }\r\n`;\r\n"],"names":["CardLink","styled","Navigator","CardImgContainer","CardImg","GatsbyImage","CategoryBox","CardImgArtDir","cardImg","cardImgMobile","altImg","cardImgs","withArtDirection","getImage","media","image","objectFit","alt","ContentWrapper","PostTitle","HeadingSmall","isCategoryTitle","easeOutTiming","Date","Excerpt","AuthorCtaContainer","AuthorContainer","AuthorImg","ArticleCard","recordId","date","title","excerpt","authorImg","authorName","category","pageLanguage","usePageLanguage","formatDate","as","CategoryCard","description","commonStyles","css","RichTextStyles","isRtl","small","centered","RichText","children","useTextDirection","ArticleBodyStyles","ArticleBody","CodeContainer","timeOptions","hour","minute","dateOptions","year","month","day","formatDateTime","dateString","contextLocale","toLocaleString","HeroWrapper","fullView","HeroContainer","HeroTextBox","Hero","subtitle","button","sectionChildren","hasDivider","href","src","bottom","data","datoCmsHomepage","seo","hero","heroAlt","heroTitle","heroSubtitle","features","featuredPostsTitle","id","datoCmsBlogRoot","postNodes","allBlogPosts","datoCmsMiscTextString","seeAllButton","seeAllPosts","pageContext","PageWrapper","pageData","seoTitle","seoDescription","seoImage","seoImageUrl","className","map","key","length","backgroundColor","hasButton","updatedAt","meta","coverImage","author","authorImageData","picture","categoryLink","gatsbyImageData","squaredImage","authorAltImg"],"sourceRoot":""}